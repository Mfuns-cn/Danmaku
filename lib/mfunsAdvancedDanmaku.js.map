{"version":3,"file":"mfunsAdvancedDanmaku.js","mappings":"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","sources":["webpack://mf-ade/./node_modules/css-loader/dist/runtime/api.js","webpack://mf-ade/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://mf-ade/./css/base.css","webpack://mf-ade/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://mf-ade/webpack/bootstrap","webpack://mf-ade/webpack/runtime/compat get default export","webpack://mf-ade/webpack/runtime/define property getters","webpack://mf-ade/webpack/runtime/hasOwnProperty shorthand","webpack://mf-ade/./css/base.css?3901","webpack://mf-ade/./src/Context/Context.ts","webpack://mf-ade/./src/i18n/zh-cn.ts","webpack://mf-ade/./src/i18n/index.ts","webpack://mf-ade/./src/Event/DanmakuEventType.ts","webpack://mf-ade/./src/core/Style/Unit/PxSize.ts","webpack://mf-ade/./src/TimeLine/AdvancedLine.ts","webpack://mf-ade/./src/Factory/TimeLineFactory.ts","webpack://mf-ade/./src/Event/DanmakuEvent.ts","webpack://mf-ade/./src/core/Renderer/BaseRenderer.ts","webpack://mf-ade/./src/util/UnitTools.ts","webpack://mf-ade/./src/core/Renderer/CSS3Renderer/CssDanmakuObj.ts","webpack://mf-ade/./src/core/Renderer/CSS3Renderer/CSS3Renderer.ts","webpack://mf-ade/./src/Factory/RendererFactory.ts","webpack://mf-ade/./src/util/deepMerge.ts","webpack://mf-ade/./src/core/Animation/Base/Cubic.ts","webpack://mf-ade/./src/core/Animation/Base/CubicAnimations.ts","webpack://mf-ade/./src/core/Animation/Base/Matrix.ts","webpack://mf-ade/./src/core/Animation/CompositeAnimation/GroupAnimations.ts","webpack://mf-ade/./src/core/Animation/CompositeAnimation/ListAnimations.ts","webpack://mf-ade/./src/core/Animation/styleAnimations/OpacityAnimations.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/StaticAnimation.ts","webpack://mf-ade/./src/core/Animation/CompositeAnimation/RepeatAnimations.ts","webpack://mf-ade/./src/core/Animation/Base/OriginAnimations.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/ScaleAnimations.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/TranslateAnimation.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/RotationAnimation.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/RotationXAnimation.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/RotationYAnimation.ts","webpack://mf-ade/./src/core/Animation/TransformsAnimations/RotationZAnimation.ts","webpack://mf-ade/./src/Factory/AnimationFactory.ts","webpack://mf-ade/./src/core/Danmaku/BaseDanmaku.ts","webpack://mf-ade/./src/Factory/DanmakuParser/DanmakuFactory.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/DanmakuDefaultAttr.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/DanmakuExtends.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/DanmakuPosititon.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/DanmakuValidate.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/PreprocessPipe.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/DanmakuDelay.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/DanmakuThen.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/PostprocessPipe.ts","webpack://mf-ade/./src/Factory/DanmakuParser/codeDanmaku/CodeDanmakuParser.ts","webpack://mf-ade/./src/Factory/DanmakuParser/mode7Danmaku/Mode7DanmakuParser.ts","webpack://mf-ade/./src/Factory/DanmakuParser/DanmakuParserFactory.ts","webpack://mf-ade/./src/Controller/Controller.ts","webpack://mf-ade/./src/core/Style/Unit/Color.ts","webpack://mf-ade/./src/core/Stage/BaseStage.ts","webpack://mf-ade/./src/core/Stage/CodeDanmakuStage.ts","webpack://mf-ade/./src/core/Stage/Mode7Stage.ts","webpack://mf-ade/./src/index.ts"],"sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".danmaku-containers {\\r\\n  position: relative;\\r\\n}\\r\\n.danmaku-containers * {\\r\\n  box-sizing: border-box;\\r\\n  transform-style: preserve-3d;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-size: 40px;\\r\\n  image-rendering: pixelated; /* 小图片放大后像素不虚化 */\\r\\n  image-rendering: -moz-crisp-edges;\\r\\n  line-height: 1;\\r\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, STHeiTi, Arial, sans-serif;\\r\\n  color: #000;\\r\\n  border: none;\\r\\n  background: none;\\r\\n}\\r\\n.danmaku-containers .stage {\\r\\n  position: absolute;\\r\\n  overflow: hidden;\\r\\n  perspective: 1000px;\\r\\n  transform-style: preserve-3d;\\r\\n}\\r\\n.danmaku-containers-debug * {\\r\\n  outline: 1px solid red;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./css/base.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;AACA;EACE,sBAAsB;EACtB,4BAA4B;EAC5B,SAAS;EACT,UAAU;EACV,eAAe;EACf,0BAA0B,EAAE,gBAAgB;EAC5C,iCAAiC;EACjC,cAAc;EACd,oEAAoE;EACpE,WAAW;EACX,YAAY;EACZ,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,4BAA4B;AAC9B;AACA;EACE,sBAAsB;AACxB\",\"sourcesContent\":[\".danmaku-containers {\\r\\n  position: relative;\\r\\n}\\r\\n.danmaku-containers * {\\r\\n  box-sizing: border-box;\\r\\n  transform-style: preserve-3d;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-size: 40px;\\r\\n  image-rendering: pixelated; /* 小图片放大后像素不虚化 */\\r\\n  image-rendering: -moz-crisp-edges;\\r\\n  line-height: 1;\\r\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, STHeiTi, Arial, sans-serif;\\r\\n  color: #000;\\r\\n  border: none;\\r\\n  background: none;\\r\\n}\\r\\n.danmaku-containers .stage {\\r\\n  position: absolute;\\r\\n  overflow: hidden;\\r\\n  perspective: 1000px;\\r\\n  transform-style: preserve-3d;\\r\\n}\\r\\n.danmaku-containers-debug * {\\r\\n  outline: 1px solid red;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./base.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","/**\r\n * 全局上下文\r\n */\r\nexport class Context {\r\n  /**\r\n   * 当前语言\r\n   */\r\n  public static language: string = \"zh-cn\";\r\n  public static debug = true;\r\n}\r\n","export default {\r\n    \"Containers is null\" : \"容器为空\",\r\n    \"Start mount stage\" : \"开始挂载舞台\",\r\n    \"Renderer type is null\": \"没有找到合适的渲染器\",\r\n    \"matrix3d param less than 16\":\"matrix3d 参数小于16个\",\r\n    \"Unknown danmaku format\":\"未知的弹幕格式\",\r\n    \"Danmaku parser fail\":\"高级弹幕解析失败，json格式可能存在问题\"\r\n}","import { Context } from \"../Context/Context\";\r\nimport zhCn from \"./zh-cn\";\r\n/**\r\n * i18n 国际化函数\r\n */\r\nexport class I18n {\r\n    private static tranTxt = {\r\n        \"zh-cn\": zhCn\r\n    }\r\n    /**\r\n     * 当前语言\r\n     */\r\n    private static language: string = Context.language;\r\n    /**\r\n     * 获取翻译，如果不存在，则返回自身\r\n     * @param str 需要国际化的字符串\r\n     * @returns 翻译结果\r\n     */\r\n    public static t(str: string): string {\r\n        // 检查字符串是否存在\r\n        if (this.tranTxt[this.language] && this.tranTxt[this.language][str]) {\r\n            return this.tranTxt[this.language][str];\r\n        }\r\n        return str;\r\n    }\r\n}","/**\r\n * 弹幕事件类型枚举\r\n */\r\nexport enum DanmakuEventType {\r\n  /**\r\n   * 弹幕字符串无效\r\n   */\r\n  DANMAKU_JSON_INVALID = \"DANMAKU_JSON_INVALID\",\r\n  /**\r\n   * 单条弹幕格式错误\r\n   */\r\n  DANMAKU_FORMAT_ERROR = \"DANMAKU_FORMAT_ERROR\",\r\n\r\n  /**\r\n   * 弹幕开始加载\r\n   */\r\n  DANMAKU_LOAD_START = \"DANMAKU_LOAD_START\",\r\n\r\n  /**\r\n   * 弹幕加载完成\r\n   */\r\n  DANMAKU_LOAD_DONE = \"DANMAKU_LOAD_DONE\",\r\n\r\n  /**\r\n   * 弹幕舞台重置\r\n   */\r\n  DANMAKU_STAGE_RESET = \"DANMAKU_STAGE_RESET\"\r\n}\r\n","import { UnitInterface } from \"./UnitInterface\";\r\n\r\nexport class PxSize implements UnitInterface{\r\n    public length:number\r\n    constructor(length:number){\r\n        this.length = length;\r\n    }\r\n    public string(): string {\r\n        return this.length +\"px\";\r\n    }\r\n\r\n}","import { DanmakuItemInterface } from \"../core/Danmaku/DanmakuItemInterface\";\r\nimport { TimeLineDanmaku } from \"./TimeLineDanmaku\";\r\nimport { TimeLineInterface } from \"./TimeLineInterface\";\r\n\r\n/**\r\n * 高级弹幕时间轴\r\n */\r\nexport class AdvancedLine implements TimeLineInterface {\r\n  /**\r\n   * 上次获取时间(10ms)\r\n   */\r\n  public lastTime: number = 0;\r\n  /**\r\n   * 时间轴,二维数组，一维是弹幕的开始10毫秒数，二维是此毫秒数下的弹幕集合\r\n   * 注意：为了节省性能，最小单位时间是10ms，\r\n   *       仅仅是数组下标是10ms，其余的都是按照ms计算的\r\n   */\r\n  public danmakuList: TimeLineDanmaku[][] = [];\r\n\r\n  /**\r\n   * 添加一个弹幕\r\n   * @param danmaku\r\n   * @param start\r\n   * @param end\r\n   */\r\n  public addDanmaku(\r\n    danmaku: DanmakuItemInterface,\r\n    start?: number,\r\n    end?: number\r\n  ) {\r\n    start = start || danmaku.startTime();\r\n\r\n    end = end || danmaku.getAnimation().getDuration() + start;\r\n    let index = this.timeToIndex(start);\r\n\r\n    if (!this.danmakuList[index]) {\r\n      this.danmakuList[index] = [];\r\n    }\r\n    this.danmakuList[index].push({\r\n      danmaku: danmaku,\r\n      start: start,\r\n      end: end,\r\n    });\r\n  }\r\n  /**\r\n   * 时间转换\r\n   * @param time\r\n   * @returns\r\n   */\r\n  protected timeToIndex(time: number): number {\r\n    return Math.floor(time / 16);\r\n  }\r\n  public getDanmakuList(time: number): {\r\n    skip: boolean;\r\n    DanmakuList: TimeLineDanmaku[];\r\n  } {\r\n    time = this.timeToIndex(time);\r\n    // 如果请求的时间超过了时间轴。。。\r\n    if (time < 0) {\r\n      return { skip: false, DanmakuList: [] };\r\n    }\r\n\r\n    let arr: TimeLineDanmaku[] = [];\r\n    let skip = false;\r\n    // 当两次时间超过200ms，表示发生了跳转\r\n    if (this.lastTime <= time && time - this.lastTime < 5) {\r\n      // 正常播放情况,遍历期间的所有内容\r\n      // console.log(this.lastTime);\r\n\r\n      for (let a = this.lastTime; a < time; a++) {\r\n        if (this.danmakuList[a]) {\r\n          // console.log(time);\r\n\r\n          arr.push(...this.danmakuList[a]);\r\n        }\r\n      }\r\n    } else {\r\n      // 否则说明播放发生了跳转，则遍历找到合适的内容\r\n      // 查找范围：在当前时间之前开始的，并且结束于当前时间之后的，\r\n      // 先找到之前开始的\r\n\r\n      for (let timeIndex = 0; timeIndex < time; timeIndex++) {\r\n        if (!this.danmakuList[timeIndex]) {\r\n          continue; // 当前时间不存在\r\n        }\r\n        // 接着再查找当前时间之后结束的\r\n        for (let l = 0; l < this.danmakuList[timeIndex].length; l++) {\r\n          if (\r\n            this.danmakuList[timeIndex][l] &&\r\n            this.timeToIndex(this.danmakuList[timeIndex][l].end) > time\r\n          ) {\r\n            arr.push(this.danmakuList[timeIndex][l]);\r\n          }\r\n        }\r\n      }\r\n      skip = true;\r\n    }\r\n    this.lastTime = time;\r\n\r\n    return { skip: skip, DanmakuList: arr };\r\n  }\r\n  public reset(): boolean {\r\n    this.danmakuList = [];\r\n    return true;\r\n  }\r\n}\r\n","import { AdvancedLine } from \"../TimeLine/AdvancedLine\";\r\nimport { TimeLineInterface } from \"../TimeLine/TimeLineInterface\";\r\n\r\nexport class TimeLineFactory{\r\n    public static list = {\r\n        \"default\":AdvancedLine,\r\n        \"advanced\":AdvancedLine\r\n    }\r\n    public static getTimeLine(type:string):TimeLineInterface{\r\n        if(!this.list[type]){\r\n           type = \"default\"\r\n        }\r\n        return new this.list[type]()\r\n    }\r\n}","import { DanmakuEventType } from \"./DanmakuEventType\";\r\n\r\n/**\r\n * 弹幕事件工具\r\n */\r\nexport class DanmakuEvent {\r\n  // 事件前缀，防止冲突\r\n  public static prefix = \"_danmakuevent_\";\r\n\r\n  /**\r\n   * 包装事件名称字符串\r\n   * @param eventname 事件名称\r\n   * @returns\r\n   */\r\n  protected static buildPrefix(eventname: DanmakuEventType): string {\r\n    return this.prefix + eventname;\r\n  }\r\n  /**\r\n   * 监听弹幕事件\r\n   * @param eventname \r\n   * @param callback \r\n   */\r\n  public static listener<T>(eventname: DanmakuEventType, callback: (data: T) => void) {\r\n    // 封装浏览器提供的事件监听器\r\n    window.addEventListener(this.buildPrefix(eventname), (data: any) => {\r\n      callback(data.detail);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 触发弹幕事件\r\n   * @param eventname\r\n   * @param data\r\n   */\r\n  public static dispatch<T>(eventname: DanmakuEventType, data: T) {\r\n    // 包装事件\r\n    let event = new CustomEvent(this.buildPrefix(eventname), {\r\n      detail: data,\r\n    });\r\n    // 触发事件\r\n    window.dispatchEvent(event);\r\n  }\r\n}\r\n","\r\n\r\nimport { DanmakuItemInterface } from \"../Danmaku/DanmakuItemInterface\";\r\nimport { CanvasStyle } from \"../Style/CanvasStyle\";\r\nimport { RendererInterface } from \"./RendererInterface\";\r\n\r\nexport class BaseRenderer implements RendererInterface {\r\n    public reset(): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public addDanmaku(_danmaku: DanmakuItemInterface): boolean {\r\n        return false;\r\n    }\r\n    public refresh(): boolean {\r\n        return false\r\n    }\r\n    protected canvas?: HTMLElement\r\n    public setCanvasContainer(canvas: HTMLElement): boolean {\r\n        this.canvas = canvas\r\n        return true\r\n    }\r\n    public updateCanvasStyle(style: CanvasStyle): boolean {\r\n        if (this.canvas) {\r\n            this.canvas.style.width = style.size.width.string();\r\n            this.canvas.style.height = style.size.height.string();\r\n            this.canvas.style.left = style.position.x.string()\r\n            this.canvas.style.top = style.position.y.string()\r\n            this.canvas.style.backgroundColor = style.color.string()\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n}","import { I18n } from \"../i18n\";\r\n\r\nexport class UnitTools{\r\n    /**\r\n     * 拼接带单位的长度字符串\r\n     * @param num 长度\r\n     * @returns \r\n     */\r\n    public static lengthSrting(num:number):string{\r\n        return `${num}px`;\r\n    }\r\n    /**\r\n     * 拼接 Matrix3d() 字符串\r\n     * @param arr 16位数字\r\n     */\r\n    public static Matrix3dString(arr:number[]):string{\r\n        if(arr.length !== 16){\r\n            throw SyntaxError(I18n.t(\"matrix3d param less than 16\"));\r\n        }\r\n        return \"Matrix3d(\" + arr.join(\",\") + \")\";\r\n    }\r\n    // static UnitFactory(type:string,obj):string{\r\n\r\n    // }\r\n}","import { UnitTools } from \"../../../util/UnitTools\";\r\nimport { AnimationInterface } from \"../../Animation/Base/AnimationInterface\";\r\nimport { DanmakuItemInterface } from \"../../Danmaku/DanmakuItemInterface\";\r\nimport { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\n\r\nexport interface DanmakuObj {\r\n  element: HTMLElement;\r\n  style: DanmakuStyle;\r\n  animation: AnimationInterface;\r\n  child: DanmakuObj[];\r\n  start: number;\r\n}\r\nexport class DanmakuTool {\r\n  /**\r\n   * 递归构建弹幕对象\r\n   * @param danmaku\r\n   * @returns\r\n   */\r\n  public static recursionDanmaku(\r\n    danmaku: DanmakuItemInterface[]\r\n  ): DanmakuObj[] {\r\n    let danmakuobj: DanmakuObj[] = [];\r\n    danmaku.forEach((danmaku) => {\r\n      let div = this.createDiv(danmaku.getContent());\r\n      this.setStyle(div, danmaku.getStyle());\r\n      let obj: DanmakuObj = {\r\n        element: div,\r\n        animation: danmaku.getAnimation(),\r\n        style: danmaku.getStyle(),\r\n        child: [],\r\n        start: danmaku.startTime(),\r\n      };\r\n      let child = danmaku.getChild();\r\n      let childObj;\r\n      if (child) {\r\n        childObj = this.recursionDanmaku(child);\r\n      }\r\n\r\n      obj.child = childObj;\r\n      danmakuobj.push(obj);\r\n    });\r\n    return danmakuobj;\r\n  }\r\n  /**\r\n   * 创建一个空div\r\n   * @param content\r\n   * @returns\r\n   */\r\n  public static createDiv(content: string): HTMLElement {\r\n    let div = document.createElement(\"div\");\r\n    div.style.position = \"absolute\";\r\n    div.innerText = content;\r\n    return div;\r\n  }\r\n\r\n  /**\r\n   * 递归构建element\r\n   * @param danmakuobj\r\n   * @returns\r\n   */\r\n  public static recursionDiv(danmakuobj: DanmakuObj[]): HTMLElement[] {\r\n    let array: HTMLElement[] = [];\r\n    danmakuobj.forEach((item) => {\r\n      let element = item.element;\r\n      if (item.child) {\r\n        let eles = this.recursionDiv(item.child);\r\n        eles.forEach((ele) => {\r\n          element.appendChild(ele);\r\n        });\r\n      }\r\n      array.push(element);\r\n    });\r\n    return array;\r\n  }\r\n  /**\r\n   * 将样式设置到元素中\r\n   */\r\n  public static setStyle(element: HTMLElement, style: { [idx: string]: any }) {\r\n    Object.assign(element.style, style);\r\n  }\r\n  /**\r\n   * 递归设置弹幕动画\r\n   * @param danmaku\r\n   */\r\n  public static recursionStyle(\r\n    danmaku: DanmakuObj[],\r\n    canvas: HTMLElement,\r\n    abstime: number,\r\n    parentTime: number = 0\r\n  ) {\r\n    //console.log(danmaku);\r\n    danmaku.forEach((dan, key) => {\r\n      // 更新弹幕样式\r\n      let time =\r\n        parentTime === 0 ? abstime - dan.start : parentTime - dan.start;\r\n\r\n      // console.log(dan.animation);\r\n\r\n      let sty;\r\n      let max;\r\n      sty = dan.animation.getStyle(time);\r\n      // console.log(sty);\r\n      if (sty) {\r\n        this.setStyle(dan.element, sty);\r\n      }\r\n      max = dan.animation.getMatrix(time);\r\n      if (max) {\r\n        dan.element.style.transform = UnitTools.Matrix3dString(max);\r\n      }\r\n      //console.log(dan);\r\n      // 如果都不存在，则表示动画已经完成，销毁元素\r\n      // 如果是子元素的情况，有可能存在弹幕未开始的情况\r\n      if (!(sty || max)) {\r\n        //console.log(dan);\r\n        if (dan.element.parentElement) {\r\n          // 从父元素删除节点\r\n          dan.element.parentElement.removeChild(dan.element);\r\n        } else {\r\n          // 否则从canvas里面删除\r\n          canvas.removeChild(dan.element);\r\n        }\r\n        // 并且清空节点\r\n        delete danmaku[key];\r\n      }\r\n      // 递归\r\n      this.recursionStyle(dan.child, canvas, abstime, time);\r\n    });\r\n  }\r\n}\r\n","import { UnitTools } from \"../../../util/UnitTools\";\r\nimport { DanmakuItemInterface } from \"../../Danmaku/DanmakuItemInterface\";\r\nimport { CanvasStyle } from \"../../Style/CanvasStyle\";\r\nimport { SizeInterface } from \"../../Style/SizeInterface\";\r\nimport { PxSize } from \"../../Style/Unit/PxSize\";\r\nimport { RendererInterface } from \"../RendererInterface\";\r\nimport { DanmakuObj, DanmakuTool } from \"./CssDanmakuObj\";\r\n\r\n\r\nexport class CSS3Renderer implements RendererInterface {\r\n\r\n    public canvasSize: SizeInterface = {\r\n        width: new PxSize(1920),\r\n        height: new PxSize(1080)\r\n    }\r\n    public canvas?: HTMLElement\r\n    public danmakuList: DanmakuObj[] = []\r\n    public setCanvasContainer(canvas: HTMLElement): boolean {\r\n        this.canvas = canvas\r\n        return true;\r\n    }\r\n    public updateCanvasStyle(style: CanvasStyle): boolean {\r\n        if (this.canvas) {\r\n            this.canvas.style.width = this.canvasSize.width.string();\r\n            this.canvas.style.height =this.canvasSize.height.string();\r\n            this.canvas.style.left = UnitTools.lengthSrting((style.size.width.length - this.canvasSize.width.length) / 2)\r\n            this.canvas.style.top = UnitTools.lengthSrting((style.size.height.length - this.canvasSize.height.length) / 2)\r\n            this.canvas.style.backgroundColor = style.color.string()\r\n            let r: number;// 缩放大小\r\n            if (style.size.width.length / style.size.height.length >= this.canvasSize.width.length / this.canvasSize.height.length) {\r\n                // 横向\r\n                r = style.size.height.length / this.canvasSize.height.length\r\n            } else {\r\n                // 纵向\r\n                r = style.size.width.length / this.canvasSize.width.length\r\n            }\r\n            this.canvas.style.transform = `scale(${r},${r})`\r\n\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    public addDanmaku(danmaku: DanmakuItemInterface): boolean {\r\n        if(!this.canvas) { return false }\r\n        let danmakuobj = DanmakuTool.recursionDanmaku([danmaku])\r\n        let eles = DanmakuTool.recursionDiv(danmakuobj)\r\n        eles.forEach((ele) => {\r\n            this.canvas?.appendChild(ele)\r\n        })\r\n        this.danmakuList.push(...danmakuobj);\r\n        // console.log(danmakuobj);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    public refresh(time): boolean {\r\n        if (!this.canvas) {\r\n            return false;\r\n        }\r\n    \r\n        DanmakuTool.recursionStyle(this.danmakuList,this.canvas,time)\r\n        return true;\r\n    }\r\n    public reset(): boolean {\r\n        // 清空画布\r\n\r\n        if(this.canvas){\r\n            this.canvas.innerHTML = \"\";\r\n        }\r\n        // 清空数组\r\n        this.danmakuList = []\r\n        return true\r\n\r\n    }\r\n}\r\n","/**\r\n * 简单渲染器工厂\r\n */\r\n\r\nimport { I18n } from \"../i18n\";\r\nimport { BaseRenderer } from \"../core/Renderer/BaseRenderer\";\r\nimport { RendererInterface } from \"../core/Renderer/RendererInterface\";\r\nimport { CSS3Renderer } from \"../core/Renderer/CSS3Renderer/CSS3Renderer\";\r\n\r\nexport class RendererFactory{\r\n    public static rendererList = {\r\n        base:BaseRenderer,\r\n        css3:CSS3Renderer\r\n    }\r\n    public static getRenderInstance(type:string):RendererInterface{\r\n        if (this.rendererList[type]) {\r\n            return new this.rendererList[type]()\r\n        }else{\r\n            throw ReferenceError(I18n.t(\"Renderer type is null\"))\r\n        }\r\n    }\r\n}","/**\r\n * 对象深度合并\r\n * @param obj1\r\n * @param obj2\r\n * @returns\r\n */\r\nexport function deepMerge(obj1, obj2) {\r\n  let key;\r\n  // tslint:disable-next-line: forin\r\n  for (key in obj2) {\r\n    obj1[key] =\r\n      obj1[key] &&\r\n      obj1[key].toString() === \"[object Object]\" &&\r\n      obj2[key] &&\r\n      obj2[key].toString() === \"[object Object]\"\r\n        ? deepMerge(obj1[key], obj2[key])\r\n        : (obj1[key] = obj2[key]);\r\n  }\r\n  return obj1;\r\n}\r\n","/**\r\n * 贝塞尔相关工具函数\r\n */\r\nexport class Cubic {\r\n    public px3: number\r\n    public px2: number\r\n    public px1: number\r\n    public py3: number\r\n    public py2: number\r\n    public py1: number\r\n    public epsilon: number\r\n    constructor (a: number, b: number, c: number, d: number) {\r\n      this.px3 = 3 * a\r\n      this.px2 = 3 * (c - a) - this.px3\r\n      this.px1 = 1 - this.px3 - this.px2\r\n      this.py3 = 3 * b\r\n      this.py2 = 3 * (d - b) - this.py3\r\n      this.py1 = 1 - this.py3 - this.py2\r\n      this.epsilon = 1e-7      // 目标精度\r\n    }\r\n\r\n    public getX(t: number) {\r\n      return ((this.px1 * t + this.px2) * t + this.px3) * t\r\n    }\r\n\r\n    public getY(t: number) {\r\n      return ((this.py1 * t + this.py2) * t + this.py3) * t\r\n    }\r\n\r\n    public solve(x: number) {\r\n      if (x === 0 || x === 1) {             // 对 0 和 1 两个特殊 t 不做计算\r\n        return this.getY(x)\r\n      }\r\n      let t = x\r\n      for (let i = 0; i < 8; i++) {         // 进行 8 次迭代\r\n        let g = this.getX(t) - x\r\n        if (Math.abs(g) < this.epsilon) {   // 检测误差到可以接受的范围\r\n          return this.getY(t)\r\n        }\r\n        let d = (3 * this.px1 * t + 2 * this.px2) * t + this.px3   // 对 x 求导\r\n        if (Math.abs(d) < 1e-6) {           // 如果梯度过低，说明牛顿迭代法无法达到更高精度\r\n          break\r\n        }\r\n        t = t - g / d\r\n      }\r\n      return this.getY(t)                   // 对得到的近似 t 求 y\r\n    }\r\n  }\r\n","import { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { AnimationInterface } from \"./AnimationInterface\";\r\nimport { Cubic } from \"./Cubic\";\r\n\r\n/**\r\n * 贝塞尔动画类\r\n */\r\nexport abstract class CubicAnimations implements AnimationInterface {\r\n  /**\r\n   * 贝塞尔函数\r\n   */\r\n  public cubicFunc: Cubic;\r\n  /**\r\n   * 贝塞尔参数\r\n   */\r\n  public cubic: [number, number, number, number] = [0, 0, 1, 1];\r\n  /**\r\n   * 动画总时间\r\n   */\r\n  public duration: number = 1000;\r\n  // currentTime:number = 0\r\n  public getMatrix(time: number): false | number[] {\r\n    if (this.isEnd(time)) {\r\n      return false;\r\n    }\r\n    let p = this.getProgress(time);\r\n    let a = this.getMatrixForCubic(p, this.duration * p);\r\n    return a;\r\n  }\r\n  public getStyle(time: number): false | DanmakuStyle {\r\n    if (this.isEnd(time)) {\r\n      return false;\r\n    }\r\n    let p = this.getProgress(time);\r\n    return this.getCubicStyle(p, this.duration * p);\r\n  }\r\n  public setParams(param?: { [idx: string]: any }): boolean {\r\n    this.cubic = param?.cubic ? param?.cubic : this.cubic;\r\n    this.duration =\r\n      param?.duration !== undefined ? param?.duration : this.duration;\r\n    return true;\r\n  }\r\n  public getDuration(): number {\r\n    return this.duration;\r\n  }\r\n  /**\r\n   * 根据动画时间获取动画进度\r\n   * @param time 动画时间\r\n   * @returns\r\n   */\r\n  public getProgress(time: number): number {\r\n    // 不能除0\r\n    if (this.duration === 0) {\r\n      return 1;\r\n    }\r\n    // 计算当前动画进度\r\n    let progress: number = time / this.duration;\r\n    // 计算出实际动画进度\r\n    let a = this.getCubic().solve(progress);\r\n    return a;\r\n  }\r\n  /**\r\n   * 根据进度返回区间内的值\r\n   * @param start\r\n   * @param end\r\n   * @param progress\r\n   */\r\n  public getProgressValue(\r\n    start: number,\r\n    end: number,\r\n    progress: number\r\n  ): number {\r\n    return start + (end - start) * progress;\r\n  }\r\n  /**\r\n   * 判断动画是否结束\r\n   */\r\n  protected isEnd(time: number) {\r\n    return time > this.duration;\r\n  }\r\n  /**\r\n   * 获取贝塞尔函数\r\n   * @returns\r\n   */\r\n  public getCubic(): Cubic {\r\n    if (!this.cubicFunc) {\r\n      this.cubicFunc = new Cubic(...this.cubic);\r\n    }\r\n    return this.cubicFunc;\r\n  }\r\n  /**\r\n   * 计算贝塞尔样式\r\n   * 注意：此处返回false仅表示未设置动画，请不要在此函数实现中判断动画结束\r\n   * @param progress 动画进度，0-1 有可能会超过此范围\r\n   */\r\n  public abstract getCubicStyle(\r\n    progress: number,\r\n    time: number\r\n  ): DanmakuStyle | false;\r\n  /**\r\n   * 计算贝塞尔的矩阵\r\n   * 注意：此处返回false仅表示未设置动画，请不要在此函数实现中判断动画结束\r\n   * @param progress 动画进度，0-1 有可能会超过此范围\r\n   * @\r\n   */\r\n  public abstract getMatrixForCubic(\r\n    progress: number,\r\n    time: number\r\n  ): number[] | false;\r\n}\r\n","/**\r\n * 矩阵变换相关工具函数\r\n */\r\nexport class Matrix {\r\n    /**\r\n     * 加法\r\n     * @param a \r\n     * @param b \r\n     */\r\n    public static add(a: number[], b: number[]): number[] {\r\n        let c: number[] = []\r\n        for (let i = 0; i < a.length; i++) {\r\n            c[i] = a[i] + b[i]\r\n        }\r\n        return c\r\n    }\r\n    /**\r\n     * 减法\r\n     * @param a \r\n     * @param b \r\n     * @returns \r\n     */\r\n    public static sub(a: number[], b: number[]): number[] {\r\n        let c: number[] = []\r\n        for (let i = 0; i < a.length; i++) {\r\n            c[i] = a[i] - b[i]\r\n        }\r\n        return c\r\n    }\r\n    public static mult(a: number[], b: number[]): number[] {\r\n        let a1 = this.tran(a);\r\n        let b1 = this.tran(b);\r\n         // 相乘约束\r\n        if (a1[0].length !== b1.length) {\r\n            throw new Error();\r\n        }\r\n        let m = a1.length;\r\n        let p = a1[0].length;\r\n        let n = b1[0].length;\r\n\r\n        // 初始化 m*n 全 0 二维数组\r\n        let c = new Array(m).fill(0).map(()=> new Array(n).fill(0));\r\n\r\n        for (let i = 0; i < m; i++) {\r\n            for (let j = 0; j < n; j++) {\r\n                for (let k = 0; k < p; k++) {\r\n                    c[i][j] += a1[i][k] * b1[k][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        return [...c[0],...c[1],...c[2],...c[3]];\r\n    }\r\n    /**\r\n     * 将一维16位数组转换成4*4二维数组\r\n     * @param a \r\n     */\r\n    protected static tran(a: number[]):number[][] {\r\n        let arr: number[][] = []\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                let index = i * 4 + j\r\n                if(!arr[i]) { arr[i] = []; }\r\n                arr[i][j] = a[index];\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    /**\r\n     * 获得一个无效果的4x4矩阵\r\n     */\r\n    public static getNullMatrix():number[]{\r\n        return [\r\n            1,0,0,0,\r\n            0,1,0,0,\r\n            0,0,1,0,\r\n            0,0,0,1\r\n        ]\r\n    }\r\n}","import { deepMerge } from \"../../../util/deepMerge\";\r\nimport { AnimationFactory } from \"../../../Factory/AnimationFactory\";\r\nimport { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { AnimationInterface } from \"../Base/AnimationInterface\";\r\nimport { CubicAnimations } from \"../Base/CubicAnimations\";\r\nimport { Matrix } from \"../Base/Matrix\";\r\n\r\n/**\r\n * 动画组，用于多个动画并行播放\r\n */\r\nexport class GroupAnimations extends CubicAnimations {\r\n  public animations: AnimationInterface[] = [];\r\n  /**\r\n   * 每个动画结束的累计矩阵\r\n   */\r\n  public cumulativeMatrix: number[][] = [];\r\n  public duration: number = 0;\r\n  public setParams(param: { [idx: string]: any }): boolean {\r\n    super.setParams(param);\r\n\r\n    this.animations = AnimationFactory.getAnimationsList(\r\n      param?.animations || []\r\n    );\r\n    // 计算出最大的动画时长\r\n    this.animations.forEach((val, key) => {\r\n      let dur = val.getDuration();\r\n      // 计算最后一帧\r\n      this.cumulativeMatrix[key] = val.getMatrix(dur) || Matrix.getNullMatrix();\r\n      if (dur > this.duration) {\r\n        // 这里覆盖了父类的属性\r\n        // 实际上，只有父类的时长不够，才会被更新\r\n        this.duration = val.getDuration();\r\n      }\r\n    });\r\n\r\n    return true;\r\n  }\r\n  public getCubicStyle(_progress: number, time: number): false | DanmakuStyle {\r\n    /**\r\n     * 合并样式，由于样式的特殊性，如果存在冲突的样式，后面的会覆盖前面的\r\n     */\r\n    let style: DanmakuStyle = { boxStyle: {}, fontStyle: {} };\r\n    let noneStyle = true;\r\n    for (const animation of this.animations) {\r\n      let style2 = animation.getStyle(time);\r\n\r\n      if (style2) {\r\n        noneStyle = false;\r\n        style = deepMerge(style, style2);\r\n      }\r\n    }\r\n    // for(let i = 0;i<this.animations.length;i++){\r\n    //     let style2 = this.animations[i].getStyle(time)\r\n    //     if(style2){\r\n    //         noneStyle = false;\r\n    //         style = dseepMerge(style,style2);\r\n    //     }\r\n\r\n    // }\r\n    if (noneStyle) {\r\n      return false;\r\n    }\r\n    return style;\r\n  }\r\n  public getMatrixForCubic(_progress: number, time: number): false | number[] {\r\n    // 建立一个空白矩阵\r\n    let arr: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    // 倒着计算所有的矩阵\r\n    for (let i = this.animations.length - 1; i >= 0; i--) {\r\n      let matrix = this.animations[i].getMatrix(time);\r\n      // console.log(matrix);\r\n\r\n      if (matrix) {\r\n        arr = Matrix.mult(arr, matrix);\r\n      } else {\r\n        arr = Matrix.mult(arr, this.cumulativeMatrix[i]);\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n","import { AnimationFactory } from \"../../../Factory/AnimationFactory\";\r\nimport { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { AnimationInterface } from \"../Base/AnimationInterface\";\r\nimport { CubicAnimations } from \"../Base/CubicAnimations\";\r\nimport { Matrix } from \"../Base/Matrix\";\r\n/**\r\n * 动画列表组，所有动画按顺序播放\r\n */\r\nexport class ListAnimations extends CubicAnimations {\r\n  public animations: AnimationInterface[] = [];\r\n  /**\r\n   * 每个动画结束的累计矩阵\r\n   */\r\n  public cumulativeMatrix: number[][] = [];\r\n  public cumulativeTime: number[] = [];\r\n  public duration: number = 0;\r\n  public setParams(param: { [idx: string]: any }): boolean {\r\n    super.setParams(param);\r\n    this.animations = AnimationFactory.getAnimationsList(\r\n      param?.animations || []\r\n    );\r\n\r\n    let duration = 0;\r\n    this.cumulativeMatrix[0] = Matrix.getNullMatrix();\r\n    this.cumulativeTime[0] = duration;\r\n\r\n    this.animations.forEach((val, key) => {\r\n      let dur = val.getDuration();\r\n\r\n      // 自增1，因为0的结束帧的1的开头\r\n      key++;\r\n      // 计算出每个动画结束后的矩阵叠加,传入持续时间以获得最后一帧动画\r\n      let matrix = val.getMatrix(dur) || Matrix.getNullMatrix();\r\n      // 叠加\r\n      this.cumulativeMatrix[key] = Matrix.mult(\r\n        matrix,\r\n        this.cumulativeMatrix[key - 1]\r\n      );\r\n\r\n      duration += dur;\r\n      this.cumulativeTime[key] = duration;\r\n    });\r\n\r\n    if (this.duration < duration) {\r\n      this.duration = duration;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public getCubicStyle(_progress: number, time: number): false | DanmakuStyle {\r\n    let curAnimation = this.getCurAnimation(time);\r\n\r\n    if (curAnimation) {\r\n      time = time - this.cumulativeTime[curAnimation.key];\r\n      return curAnimation.animation.getStyle(time);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public getMatrixForCubic(_progress: number, time: number): false | number[] {\r\n    let curAnimation = this.getCurAnimation(time);\r\n\r\n    if (curAnimation) {\r\n      time = time - this.cumulativeTime[curAnimation.key];\r\n\r\n      let mat =\r\n        curAnimation.animation.getMatrix(time) || Matrix.getNullMatrix();\r\n      return Matrix.mult(mat, this.cumulativeMatrix[curAnimation.key]);\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * 获取当前的动画元素,如果不存在则返回false\r\n   */\r\n  protected getCurAnimation(\r\n    time: number\r\n  ): { key: number; animation: AnimationInterface } | false {\r\n    for (let i = this.animations.length - 1; i >= 0; i--) {\r\n      let duration = this.cumulativeTime[i];\r\n      if (time > duration) {\r\n        return { key: i, animation: this.animations[i] };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { CubicAnimations } from \"../Base/CubicAnimations\";\r\n\r\n/**\r\n * 透明度动画\r\n *\r\n * @export\r\n * @class OpacityAnimations\r\n * @extends {CubicAnimations}\r\n */\r\nexport class OpacityAnimations extends CubicAnimations {\r\n  public opacity: [number, number] = [0, 1];\r\n  public setParams(param?: { [idx: string]: any }): boolean {\r\n    super.setParams(param);\r\n    this.opacity = param?.opacity || this.opacity;\r\n    // console.log(param);\r\n    return true;\r\n  }\r\n  public getCubicStyle(progress: number, _time: number): false | DanmakuStyle {\r\n    return {\r\n      opacity: this.getProgressValue(\r\n        this.opacity[0],\r\n        this.opacity[1],\r\n        progress\r\n      ),\r\n    };\r\n  }\r\n  public getMatrixForCubic(_progress: number, _time: number): false | number[] {\r\n    return false;\r\n  }\r\n}\r\n","import { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { AnimationInterface } from \"../Base/AnimationInterface\";\r\n\r\n/**\r\n * 静止动画 仅仅悬停在某一个位置一定时间\r\n */\r\nexport class StaticAnimation implements AnimationInterface {\r\n  public getDuration(): number {\r\n    return this.duration;\r\n  }\r\n\r\n  public duration: number = 1000;\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n  public z: number = 0;\r\n  public setParams(param: { [idx: string]: any }): boolean {\r\n    let def = 0;\r\n    this.duration =\r\n      param?.duration !== undefined ? param?.duration : this.duration;\r\n    this.x = param?.x || def;\r\n    this.y = param?.y || def;\r\n    this.z = param?.z || def;\r\n    return true;\r\n  }\r\n  public getMatrix(time: number): false | number[] {\r\n    // console.log(time);\r\n\r\n    if (time > this.duration) {\r\n      return false;\r\n    }\r\n\r\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, this.x, this.y, this.z, 1];\r\n  }\r\n  public getStyle(): false | DanmakuStyle {\r\n    return false;\r\n  }\r\n}\r\n","import { AnimationFactory } from \"../../../Factory/AnimationFactory\";\r\nimport { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { AnimationInterface } from \"../Base/AnimationInterface\";\r\nimport { CubicAnimations } from \"../Base/CubicAnimations\";\r\nimport { StaticAnimation } from \"../TransformsAnimations/StaticAnimation\";\r\n\r\nexport class RepeatAnimations extends CubicAnimations {\r\n  /**\r\n   * 动画接口\r\n   */\r\n  public animation: AnimationInterface;\r\n  /**\r\n   * 重复次数\r\n   */\r\n  public repeat: number = 1;\r\n  /**\r\n   * 单个动画时间\r\n   */\r\n  public animationTime: number;\r\n  public duration: number = 0;\r\n  public getCubicStyle(_progress: number, time: number): false | DanmakuStyle {\r\n    return this.animation.getStyle(this.getCurTime(time));\r\n  }\r\n  public getMatrixForCubic(_progress: number, time: number): false | number[] {\r\n    return this.animation.getMatrix(this.getCurTime(time));\r\n  }\r\n  public setParams(param: { [idx: string]: any }): boolean {\r\n    super.setParams(param);\r\n\r\n    if (param?.animations) {\r\n      let animation = AnimationFactory.getAnimations(\"list\", {\r\n        animations: param?.animations,\r\n      });\r\n      if (animation) {\r\n        this.animation = animation;\r\n      } else {\r\n        this.animation = new StaticAnimation();\r\n      }\r\n      //   // 将列表组成一个list\r\n      //   this.animation =\r\n      //     AnimationFactory.getAnimations(\r\n      //       param?.animation.type,\r\n      //       param?.animations\r\n      //     ) || new StaticAnimation();\r\n    } else {\r\n      this.animation = new StaticAnimation();\r\n    }\r\n\r\n    // console.log(this.animation);\r\n\r\n    this.repeat = param?.repeat || this.repeat;\r\n    this.animationTime = this.animation.getDuration();\r\n    // 覆盖父级存活时间\r\n    // 计算方式 单个弹幕时间 X 弹幕重复次数\r\n    this.duration = this.animationTime * this.repeat;\r\n    // console.log(this.duration);\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * 获得当前的弹幕时间\r\n   */\r\n  public getCurTime(time: number) {\r\n    // 取余\r\n    return time % this.animationTime;\r\n  }\r\n}\r\n","import { CubicAnimations } from \"./CubicAnimations\";\r\nimport { Matrix } from \"./Matrix\";\r\n\r\n/**\r\n * 可改变动画中心点的动画\r\n *\r\n * @export\r\n * @abstract\r\n * @class OriginAnimations\r\n * @extends {CubicAnimations}\r\n */\r\nexport abstract class OriginAnimations extends CubicAnimations {\r\n    public origin:number[] = [0,0,0]\r\n    public setParams(param: { [idx: string]: any; }): boolean {\r\n        if (!super.setParams(param)) { return false; }\r\n        this.origin =  param?.origin || this.origin\r\n        return true\r\n    }\r\n    public getMatrixForCubic(progress: number): number[] | false{\r\n        let arr = this.getMatrixForOrigin(progress)\r\n        if(!arr) { return false }\r\n        arr = Matrix.mult([\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            -this.origin[0], -this.origin[1], -this.origin[2], 1\r\n\r\n        ],                arr)\r\n        return Matrix.mult(arr,[\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            this.origin[0], this.origin[1], this.origin[2], 1\r\n\r\n        ])\r\n    }\r\n    /**\r\n     * 获取用于计算原坐标点的矩阵\r\n     * @param progress \r\n     */\r\n    public abstract getMatrixForOrigin(progress: number): number[] | false\r\n}","import { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { OriginAnimations } from \"../Base/OriginAnimations\";\r\n\r\n/**\r\n * 缩放动画\r\n */\r\nexport class ScaleAnimations extends OriginAnimations{\r\n    public scale:{x1:number,y1:number,z1:number,x2:number,y2:number,z2:number}\r\n    = {x1:1,y1:1,z1:1,x2:1,y2:1,z2:1}\r\n    public setParams(param: { [idx: string]: any; }): boolean {\r\n        if (!super.setParams(param)) { return false; }\r\n        this.scale = Object.assign(this.scale,param?.scale)\r\n        return true\r\n    }\r\n    public getMatrixForOrigin(progress: number): false | number[] {\r\n        let x = this.getProgressValue(this.scale.x1, this.scale.x2, progress);\r\n        let y = this.getProgressValue(this.scale.y1, this.scale.y2, progress)\r\n        let z = this.getProgressValue(this.scale.z1, this.scale.z2, progress)\r\n        let m = [\r\n            x,0,0,0,\r\n            0,y,0,0,\r\n            0,0,z,0,\r\n            0,0,0,1\r\n        ]\r\n        return m\r\n\r\n    }\r\n    public getCubicStyle(_progress: number): false | DanmakuStyle {\r\n       return false\r\n    }\r\n\r\n}","import { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { CubicAnimations } from \"../Base/CubicAnimations\";\r\n\r\nexport class TranslateAnimation extends CubicAnimations {\r\n\r\n    public path: { x1: number, y1: number, z1: number, x2: number, y2: number, z2: number }\r\n        =\r\n        { x1: 0, y1: 0, x2: 0, y2: 0, z1: 0, z2: 0 }\r\n    public setParams(param: { [idx: string]: any; }): boolean {\r\n        if (!super.setParams(param)) { return false; }\r\n        this.path = Object.assign(this.path,param?.path)\r\n        return true\r\n    }\r\n    public getCubicStyle(): false | DanmakuStyle {\r\n        return false;\r\n    }\r\n    public getMatrixForCubic(progress: number): false | number[] {\r\n        // console.log(this.path);\r\n        // console.log(progress);\r\n\r\n        let x = this.getProgressValue(this.path.x1, this.path.x2, progress);\r\n        let y = this.getProgressValue(this.path.y1, this.path.y2, progress)\r\n        let z = this.getProgressValue(this.path.z1, this.path.z2, progress)\r\n\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            x, y, z, 1\r\n        ]\r\n    }\r\n}","import { DanmakuStyle } from \"../../Style/DanmakuStyle\";\r\nimport { OriginAnimations } from \"../Base/OriginAnimations\";\r\n\r\n/**\r\n * 旋转父类\r\n */\r\nexport abstract class RotationAnimation extends OriginAnimations {\r\n\r\n    public angle:{start:number,end:number} = {start:0,end:360}\r\n    public setParams(param: { [idx: string]: any; }): boolean {\r\n        if (!super.setParams(param)) { return false; }\r\n        this.angle = Object.assign(this.angle,param?.angle)\r\n        return true\r\n    }\r\n    public getCubicStyle(_progress: number): false | DanmakuStyle {\r\n        return false;\r\n    }\r\n    /**\r\n     * 角度转弧度\r\n     */\r\n    protected A2R(a: number) {\r\n        return a * (Math.PI / 180)\r\n    }\r\n}","import { RotationAnimation } from \"./RotationAnimation\";\r\n\r\n/**\r\n * X轴旋转\r\n */\r\nexport class RotationXAnimation extends RotationAnimation {\r\n  public getMatrixForOrigin(progress: number): false | number[] {\r\n    let angle = this.getProgressValue(\r\n      this.angle.start,\r\n      this.angle.end,\r\n      progress\r\n    );\r\n    let sin = Math.sin(this.A2R(angle));\r\n    let cos = Math.cos(this.A2R(angle));\r\n\r\n    return [1, 0, 0, 0, 0, cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1];\r\n  }\r\n}\r\n","import { RotationAnimation } from \"./RotationAnimation\";\r\n/**\r\n * y轴旋转\r\n */\r\nexport class RotationYAnimation extends RotationAnimation {\r\n    public getMatrixForOrigin(progress: number): false | number[] {\r\n        let angle = this.getProgressValue(this.angle.start,this.angle.end,progress)\r\n        let sin = Math.sin(this.A2R(angle));\r\n        let cos = Math.cos(this.A2R(angle))\r\n        return [\r\n            cos, 0, sin, 0,\r\n            0, 1, 0, 0,\r\n            -sin, 0, cos, 0,\r\n            0, 0, 0, 1\r\n        ]\r\n    }\r\n}","import { RotationAnimation } from \"./RotationAnimation\";\r\n\r\n/**\r\n * z轴旋转\r\n */\r\nexport class RotationZAnimation extends RotationAnimation {\r\n    public getMatrixForOrigin(progress: number): false | number[] {\r\n        let angle = this.getProgressValue(this.angle.start,this.angle.end,progress)\r\n        let sin = Math.sin(this.A2R(angle));\r\n        let cos = Math.cos(this.A2R(angle))\r\n        return [\r\n            cos,sin, 0, 0,\r\n            -sin, cos, 0, 0,\r\n            0, 0,1, 0,\r\n            0, 0, 0, 1\r\n        ]\r\n    }\r\n}","import { AnimationInterface } from \"../core/Animation/Base/AnimationInterface\";\r\nimport { GroupAnimations } from \"../core/Animation/CompositeAnimation/GroupAnimations\";\r\nimport { ListAnimations } from \"../core/Animation/CompositeAnimation/ListAnimations\";\r\nimport { OpacityAnimations } from \"../core/Animation/styleAnimations/OpacityAnimations\";\r\nimport { RepeatAnimations } from \"../core/Animation/CompositeAnimation/RepeatAnimations\";\r\nimport { ScaleAnimations } from \"../core/Animation/TransformsAnimations/ScaleAnimations\";\r\nimport { TranslateAnimation } from \"../core/Animation/TransformsAnimations/TranslateAnimation\";\r\nimport { RotationXAnimation } from \"../core/Animation/TransformsAnimations/RotationXAnimation\";\r\nimport { RotationYAnimation } from \"../core/Animation/TransformsAnimations/RotationYAnimation\";\r\nimport { RotationZAnimation } from \"../core/Animation/TransformsAnimations/RotationZAnimation\";\r\nimport { StaticAnimation } from \"../core/Animation/TransformsAnimations/StaticAnimation\";\r\n\r\nexport class AnimationFactory {\r\n    public static animationList = {\r\n        \"static\":StaticAnimation,// 静态定位\r\n        \"translate\":TranslateAnimation,// 平移\r\n        \"rotateX\":RotationXAnimation,// x轴旋转\r\n        \"rotateY\":RotationYAnimation,// y轴旋转\r\n        \"rotateZ\":RotationZAnimation,// z轴旋转\r\n        \"scale\":ScaleAnimations,// 缩放\r\n        \"list\":ListAnimations,// 动画列表\r\n        \"group\":GroupAnimations,// 动画组\r\n        \"repeat\":RepeatAnimations,// 重复动画\r\n        \"opacity\":OpacityAnimations\r\n    }\r\n\r\n    public static getAnimations(type:string,params):AnimationInterface | false{\r\n        if(this.animationList[type]){\r\n            // console.log(params);\r\n            let ani = new this.animationList[type]()\r\n            // console.log(ani);\r\n\r\n            ani.setParams(params)\r\n            return ani;\r\n        }\r\n        return false;\r\n    }\r\n    public static getAnimationsList(list:{key: { [idx: string]: any; }}[]):AnimationInterface[]{\r\n        let animationList:AnimationInterface[] = []\r\n\r\n        list?.forEach((val)=>{\r\n            let ani =  this.getAnimations(val[\"type\"],val)\r\n            if(ani){\r\n                animationList.push(ani);\r\n            }\r\n        })\r\n        return animationList\r\n    }\r\n}","import { DanmakuStyle } from \"../Style/DanmakuStyle\";\r\nimport { AnimationInterface } from \"../Animation/Base/AnimationInterface\";\r\nimport { DanmakuItemInterface } from \"./DanmakuItemInterface\";\r\nimport { StaticAnimation } from \"../Animation/TransformsAnimations/StaticAnimation\";\r\n\r\n/**\r\n * 基础弹幕类型\r\n */\r\nexport class BaseDanmaku implements DanmakuItemInterface {\r\n  public style: DanmakuStyle = {};\r\n  public start: number = 0;\r\n  public animation?: AnimationInterface;\r\n  public content: string = \"\";\r\n  public child: DanmakuItemInterface[] = [];\r\n  /**\r\n   * 设置参数\r\n   * @param param\r\n   * @returns\r\n   */\r\n  public setParams(param: { [idx: string]: any }): boolean {\r\n    // 设置文字样式\r\n    try {\r\n      // 设置开始时间\r\n      if (param?.start) {\r\n        this.start = param?.start;\r\n      }\r\n      if (param?.animation) {\r\n        this.animation = param?.animation || new StaticAnimation();}\r\n      if (param?.child) { this.child = param.child; }\r\n      if (param?.style) { this.style = param?.style; }\r\n      if (param?.content) { this.content = param?.content;}\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  public getType(): string {\r\n    return \"base\";\r\n  }\r\n  public getContent(): string {\r\n    return this.content;\r\n  }\r\n  public getChild(): DanmakuItemInterface[] {\r\n    return this.child;\r\n  }\r\n  public getAnimation(): AnimationInterface {\r\n    if (!this.animation) {\r\n      this.animation = new StaticAnimation();\r\n    }\r\n    return this.animation;\r\n  }\r\n  public getStyle(): DanmakuStyle {\r\n    return this.style;\r\n  }\r\n  public startTime(): number {\r\n    return this.start;\r\n  }\r\n}\r\n","import { BaseDanmaku } from \"../../core/Danmaku/BaseDanmaku\";\r\nimport { DanmakuItemInterface } from \"../../core/Danmaku/DanmakuItemInterface\";\r\n\r\n/**\r\n * 弹幕解析器工厂\r\n */\r\nexport class DanmakuFactory{\r\n    public static list = {\r\n        \"text\":BaseDanmaku\r\n    }\r\n    public static getDanmakuInstance(type:string):DanmakuItemInterface{\r\n        if(!this.list[type]){\r\n            type = \"text\"\r\n        }\r\n        return new this.list[type]()\r\n    }\r\n}","import { JsonPreprocessInterface } from \"./JsonPreprocessInterface\";\r\n/**\r\n * 弹幕默认属性设置\r\n */\r\nexport class DanmakuDefaultAttr implements JsonPreprocessInterface {\r\n  public process(json: any, _index: number) {\r\n    // 添加默认的动画\r\n    if (!json?.animations || json?.animations === []) {\r\n      json.animations = [{ type: \"static\" }];\r\n    }\r\n    return json;\r\n  }\r\n}\r\n","import { deepMerge } from \"../../../util/deepMerge\";\r\nimport { JsonPreprocessInterface } from \"./JsonPreprocessInterface\";\r\n/**\r\n * 弹幕继承\r\n */\r\nexport class DanamkuExtends implements JsonPreprocessInterface {\r\n  /**\r\n   * id列表\r\n   */\r\n  protected idList: any[] = [];\r\n  public process(json: any, _index: number) {\r\n    let danmaku = json;\r\n    // 继承弹幕\r\n    if (danmaku?.extends) {\r\n      // 如果id和extend相等，直接返回\r\n      if (danmaku?.id === danmaku?.extends) {\r\n        return json;\r\n      }\r\n      // 获取父级弹幕\r\n\r\n      let parent = this.idList[json.extends];\r\n      if (parent) {\r\n        // 合并\r\n        danmaku = deepMerge(this.copy(parent), json);\r\n      }\r\n    }\r\n\r\n    // 标记弹幕id\r\n    if (json?.id) {\r\n      this.save(json.id, danmaku);\r\n    }\r\n    // 存储_LAST_变量\r\n    this.save(\"_LAST_\", danmaku);\r\n    return danmaku;\r\n  }\r\n  protected copy(json: any) {\r\n    return JSON.parse(JSON.stringify(json));\r\n  }\r\n  protected save(name: string, danmaku: any) {\r\n    // 如果项目存在id则加入到列表\r\n    let copy = this.copy(danmaku);\r\n    // 去掉id属性\r\n    delete copy.id;\r\n    this.idList[name] = copy;\r\n  }\r\n}\r\n","import { JsonPreprocessInterface } from \"./JsonPreprocessInterface\";\r\n\r\nexport class DanmakuPosition implements JsonPreprocessInterface {\r\n  public process(json: any, _index: number) {\r\n    // 当弹幕不存在动画时\r\n    if (!json?.animations || json?.animations === []) {\r\n      // 检测弹幕是否存在xyz和duration\r\n      let x = json?.x || 0;\r\n      let y = json?.y || 0;\r\n      let z = json?.z || 0;\r\n      let duration = json.duration || 1000;\r\n      json.animations = [\r\n        {\r\n          type: \"static\",\r\n          duration,\r\n          x,\r\n          y,\r\n          z,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return json;\r\n  }\r\n}\r\n","import { DanmakuEvent } from \"../../../Event/DanmakuEvent\";\r\nimport { DanmakuEventType } from \"../../../Event/DanmakuEventType\";\r\nimport { I18n } from \"../../../i18n\";\r\nimport { JsonPreprocessInterface } from \"./JsonPreprocessInterface\";\r\n\r\n/**\r\n * 判断弹幕类型是否正确\r\n */\r\nexport class DanmakuValidate implements JsonPreprocessInterface {\r\n  public process(json: any, index: number) {\r\n    // 判断弹幕是否是object\r\n    if (typeof json !== \"object\") {\r\n      console.warn(\r\n        `${I18n.t(\"Unknown danmaku format\")} :  ${json}  index: + ${index}`\r\n      );\r\n      // 触发弹幕类型错误事件\r\n      DanmakuEvent.dispatch(DanmakuEventType.DANMAKU_FORMAT_ERROR, {\r\n        content: json,\r\n        index,\r\n      });\r\n      return false;\r\n    }\r\n    return json;\r\n  }\r\n}\r\n","import { DanmakuDefaultAttr } from \"./DanmakuDefaultAttr\";\r\nimport { DanamkuExtends } from \"./DanmakuExtends\";\r\nimport { DanmakuPosition } from \"./DanmakuPosititon\";\r\nimport { DanmakuValidate } from \"./DanmakuValidate\";\r\nimport { JsonPreprocessInterface } from \"./JsonPreprocessInterface\";\r\n\r\n/**\r\n * 弹幕预渲染管道\r\n */\r\nexport class PreprocessPipe implements JsonPreprocessInterface {\r\n  protected list: JsonPreprocessInterface[] = [\r\n    new DanmakuValidate(), // 弹幕格式验证\r\n    new DanamkuExtends(), // 弹幕继承模块\r\n    new DanmakuPosition(), // 弹幕xyz属性语法糖\r\n    new DanmakuDefaultAttr(), // 弹幕默认属性设置\r\n  ];\r\n  public process(json: any, index: number) {\r\n    // 初始化当前的弹幕\r\n    let danmaku: any = json;\r\n    this.list.forEach((value) => {\r\n      let tmpDanmaku = value.process(danmaku, index);\r\n      // 如果中途有任何一个环节出错，就退出\r\n      if (tmpDanmaku === false) {\r\n        return false;\r\n      }\r\n      danmaku = tmpDanmaku;\r\n    });\r\n    return danmaku;\r\n  }\r\n}\r\n","import { DanmakuItemInterface } from \"../../../core/Danmaku/DanmakuItemInterface\";\r\nimport { JsonPostprocessInterface } from \"./JsonPostprocessInterface\";\r\n\r\nexport class DanmakuDelay implements JsonPostprocessInterface {\r\n  public process(\r\n    danmaku: DanmakuItemInterface,\r\n    params: any\r\n  ): false | DanmakuItemInterface {\r\n    if (params?.delay) {\r\n      let delay = parseInt(params.delay, 10);\r\n      let start = danmaku.startTime() + delay;\r\n      danmaku.setParams({\r\n        start,\r\n      });\r\n    }\r\n    return danmaku;\r\n  }\r\n}\r\n","import { DanmakuItemInterface } from \"../../../core/Danmaku/DanmakuItemInterface\";\r\nimport { JsonPostprocessInterface } from \"./JsonPostprocessInterface\";\r\n\r\n/**\r\n * Then 语法处理\r\n */\r\nexport class DanmakuThen implements JsonPostprocessInterface {\r\n  protected idList: number[] = [];\r\n  public process(\r\n    danmaku: DanmakuItemInterface,\r\n    params: any\r\n  ): false | DanmakuItemInterface {\r\n    // 设置开始时间\r\n    if (!params?.start && params?.then) {\r\n      let start = this.idList[params.then] || 0;\r\n      danmaku.setParams({\r\n        start,\r\n      });\r\n    }\r\n    // 计算存在id属性结束时间\r\n    if (params?.id) {\r\n      this.idList[params.id] =\r\n        danmaku.startTime() + danmaku.getAnimation().getDuration();\r\n    }\r\n    // _LAST_ 变量\r\n    this.idList[\"_LAST_\"] =\r\n      danmaku.startTime() + danmaku.getAnimation().getDuration();\r\n    return danmaku;\r\n  }\r\n}\r\n","import { DanmakuItemInterface } from \"../../../core/Danmaku/DanmakuItemInterface\";\r\nimport { DanmakuDelay } from \"./DanmakuDelay\";\r\nimport { DanmakuThen } from \"./DanmakuThen\";\r\nimport { JsonPostprocessInterface } from \"./JsonPostprocessInterface\";\r\n/**\r\n * 后渲染管道\r\n */\r\nexport class PostprocessPipe implements JsonPostprocessInterface {\r\n  protected list: JsonPostprocessInterface[] = [\r\n    new DanmakuThen(), // then 语法处理\r\n    new DanmakuDelay(), // delay 语法处理\r\n  ];\r\n  public process(\r\n    danmaku: DanmakuItemInterface,\r\n    params: any\r\n  ): DanmakuItemInterface | false {\r\n    let dan = danmaku;\r\n    this.list.forEach((value) => {\r\n      let dan2 = value.process(danmaku, params);\r\n      // 如果中途有任何一个环节出错，就退出\r\n      if (dan2 === false) {\r\n        return false;\r\n      }\r\n      dan = dan2;\r\n    });\r\n    return dan;\r\n  }\r\n}\r\n","import { I18n } from \"../../../i18n\";\r\nimport { DanmakuItemInterface } from \"../../../core/Danmaku/DanmakuItemInterface\";\r\nimport { AnimationFactory } from \"../../AnimationFactory\";\r\nimport { DanmakuFactory } from \"../DanmakuFactory\";\r\nimport { DanmakuParserInterface } from \"../DanmakuParserInterface\";\r\nimport { DanmakuEvent } from \"../../../Event/DanmakuEvent\";\r\nimport { DanmakuEventType } from \"../../../Event/DanmakuEventType\";\r\nimport { PreprocessPipe } from \"./PreprocessPipe\";\r\nimport { PostprocessPipe } from \"./PostprocessPipe\";\r\n\r\n/**\r\n * JSON 格式弹幕解析器\r\n */\r\nexport class CodeDanmakuParser implements DanmakuParserInterface {\r\n  /**\r\n   * 弹幕tag列表\r\n   */\r\n  protected tagList: any[] = [];\r\n\r\n  public parser(content: string): DanmakuItemInterface[] {\r\n    try {\r\n      let json: any[] = JSON.parse(content);\r\n      return this.getDanmaku(json);\r\n    } catch (e) {\r\n      // 触发弹幕格式无效事件\r\n      DanmakuEvent.dispatch(\r\n        DanmakuEventType.DANMAKU_JSON_INVALID,\r\n        I18n.t(\"Danmaku parser fail\")\r\n      );\r\n      console.warn(I18n.t(\"Danmaku parser fail\"));\r\n      console.warn(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取弹幕\r\n   * @param obj\r\n   * @returns\r\n   */\r\n  public getDanmaku(obj?: any[]): DanmakuItemInterface[] {\r\n    let list: DanmakuItemInterface[] = [];\r\n    let preprocessPipe = new PreprocessPipe();\r\n    let postprocessPipe = new PostprocessPipe();\r\n    /**\r\n     * 遍历弹幕列表\r\n     */\r\n    obj?.forEach((json, index) => {\r\n      // 经过前置管道处理\r\n      let dan = preprocessPipe.process(json, index);\r\n      if (dan) {\r\n        // 封装 弹幕对象\r\n        let danmaku = DanmakuFactory.getDanmakuInstance(dan.type);\r\n        danmaku.setParams({\r\n          start: dan?.start,\r\n          content: dan?.content,\r\n          style: dan?.style,\r\n          animation: AnimationFactory.getAnimations(\"list\", {\r\n            animations: dan?.animations,\r\n          }), // 将列表组成一个list\r\n          child: this.getDanmaku(dan.childs),\r\n        });\r\n        // 后置管道处理\r\n        // console.log(danmaku, dan);\r\n\r\n        let danmaku2 = postprocessPipe.process(danmaku, json);\r\n        if (danmaku2) {\r\n          list.push(danmaku);\r\n        }\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n}\r\n","import { DanmakuItemInterface } from \"../../../core/Danmaku/DanmakuItemInterface\";\r\nimport { DanmakuEvent } from \"../../../Event/DanmakuEvent\";\r\nimport { DanmakuEventType } from \"../../../Event/DanmakuEventType\";\r\nimport { AnimationFactory } from \"../../../Factory/AnimationFactory\";\r\nimport { I18n } from \"../../../i18n\";\r\nimport { DanmakuFactory } from \"../DanmakuFactory\";\r\nimport { DanmakuParserInterface } from \"../DanmakuParserInterface\";\r\n\r\nexport class Mode7DanmakuParser implements DanmakuParserInterface {\r\n  /**\r\n   * m7 弹幕解析器\r\n   * 弹幕格式示例\r\n   * [\r\n   *  {\r\n   *    content:string,//弹幕内容\r\n   *    start:number//开始时间\r\n   *    size:number,//文字大小\r\n   *    color:\"#ffffffff\"//文字颜色\r\n   *    weight:400,//文本粗细\r\n   *    shadow:true,//阴影\r\n   *    stroke:number,//描边\r\n   *    strokeColor:\"#fffffff\",//描边颜色\r\n   *    font:string,//字体\r\n   *    zIndex:1,//层级,\r\n   *    linear:bool,//线性动画\r\n   *    animations:[//动画属性\r\n   *      {\r\n   *        duration:number//动画时间\r\n   *        x:number,//x\r\n   *        y:number,//y\r\n   *        opacity:number//透明度\r\n   *        rx:number,//旋转\r\n   *        ry:number,\r\n   *        rz:number,\r\n   *        scale:number//缩放\r\n   *      },\r\n   *      ....\r\n   *    ]\r\n   *  }\r\n   * ]\r\n   * @param content\r\n   */\r\n\r\n  public parser(content: string): DanmakuItemInterface[] {\r\n    try {\r\n      let json: any[] = JSON.parse(content);\r\n      return this.getDanmaku(json);\r\n    } catch (e) {\r\n      // 触发弹幕格式无效事件\r\n      DanmakuEvent.dispatch(\r\n        DanmakuEventType.DANMAKU_JSON_INVALID,\r\n        I18n.t(\"Danmaku parser fail\")\r\n      );\r\n      console.warn(I18n.t(\"Danmaku parser fail\"));\r\n      console.warn(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  protected getDanmaku(list: any[]): DanmakuItemInterface[] {\r\n    let danmakulist: DanmakuItemInterface[] = [];\r\n    list.forEach((danmaku) => {\r\n      let danmakuObj = DanmakuFactory.getDanmakuInstance(\"text\");\r\n      let cubic = danmaku.linear ? [0, 0, 1, 1] : [0.42, 0, 1, 1];\r\n      danmakuObj.setParams({\r\n        content: danmaku.content,\r\n        start: danmaku.start || 0,\r\n        style: this.getStyle(danmaku),\r\n        animation: AnimationFactory.getAnimations(\"list\", {\r\n          cubic,\r\n          animations: this.getAnimations(danmaku.animations || []),\r\n        }), // 将列表组成一个list,\r\n      });\r\n      danmakulist.push(danmakuObj);\r\n    });\r\n    return danmakulist;\r\n  }\r\n  protected getStyle(danmaku: any) {\r\n    return {\r\n      fontSize: `${danmaku.size || 40}px`,\r\n      color: danmaku.color || \"#000\",\r\n      fontWeight: danmaku.weight || 400,\r\n      textShadow: danmaku.shadow ? \"5px 5px 5px rgba(0,0,0,0.4)\" : \"\",\r\n      \"-webkit-text-stroke\": `${danmaku.stroke || 0}px ${\r\n        danmaku.strokeColor || \"#000\"\r\n      }`,\r\n      fontFamily: danmaku.font || \"黑体\",\r\n      zIndex: danmaku.zIndex || 1,\r\n    };\r\n  }\r\n  /**\r\n   * 封装动画\r\n   *  {\r\n   *     duration:number//动画时间\r\n   *     x:number,//x\r\n   *     y:number,//y\r\n   *     opacity:number//透明度\r\n   *     rx:number,//旋转\r\n   *     ry:number,\r\n   *     rz:number,\r\n   *     scale:number//缩放\r\n   *   }\r\n   * @param animations\r\n   */\r\n  protected getAnimations(animations: any[]) {\r\n    let animationsList: any[] = [];\r\n    let lastAnimation;\r\n\r\n    if (!Array.isArray(animations) || animations === []) {\r\n      return animationsList;\r\n    }\r\n    animations.forEach((animation) => {\r\n      let {\r\n        x: x2 = 0,\r\n        y: y2 = 0,\r\n        opacity: o2 = 1,\r\n        rx: rx2 = 0,\r\n        ry: ry2 = 0,\r\n        rz: rz2 = 0,\r\n        scale: s2 = 1,\r\n      } = animation;\r\n      if (s2 === 0) {\r\n        s2 = 1;\r\n      }\r\n      let danmakuObj: { type: string; animations: any[] } = {\r\n        type: \"group\",\r\n        animations: [],\r\n      };\r\n      if (!lastAnimation) {\r\n        // 第一次，添加初始位置\r\n\r\n        // xy 移动\r\n        danmakuObj.animations.push({\r\n          type: \"static\",\r\n          duration: 0,\r\n          x: x2,\r\n          y: y2,\r\n        });\r\n        // 旋转\r\n        danmakuObj.animations.push({\r\n          type: \"rotateX\",\r\n          duration: 0,\r\n          angle: {\r\n            end: rx2,\r\n          },\r\n        });\r\n        danmakuObj.animations.push({\r\n          type: \"rotateY\",\r\n          duration: 0,\r\n          angle: {\r\n            end: ry2,\r\n          },\r\n        });\r\n        danmakuObj.animations.push({\r\n          type: \"rotateZ\",\r\n          duration: 0,\r\n          angle: {\r\n            end: rz2,\r\n          },\r\n        });\r\n        // 缩放\r\n        danmakuObj.animations.push({\r\n          type: \"scale\",\r\n          duration: 0,\r\n          scale: {\r\n            x2: s2,\r\n            y2: s2,\r\n            z2: s2,\r\n          },\r\n        });\r\n      } else {\r\n        let {\r\n          x: x1 = 0,\r\n          y: y1 = 0,\r\n          duration = 1000,\r\n          opacity: o1 = 1,\r\n          rx: rx1 = 0,\r\n          ry: ry1 = 0,\r\n          rz: rz1 = 0,\r\n        } = lastAnimation;\r\n\r\n        // 移动\r\n        danmakuObj.animations.push({\r\n          type: \"translate\",\r\n          duration,\r\n          path: {\r\n            x2: x2 - x1,\r\n            y2: y2 - y1,\r\n          },\r\n        });\r\n        // 透明度\r\n        danmakuObj.animations.push({\r\n          type: \"opacity\",\r\n          duration,\r\n          opacity: [o1, o2],\r\n        });\r\n        // 旋转\r\n        danmakuObj.animations.push({\r\n          type: \"rotateX\",\r\n          duration,\r\n          angle: {\r\n            end: rx2 - rx1,\r\n          },\r\n        });\r\n        danmakuObj.animations.push({\r\n          type: \"rotateY\",\r\n          duration,\r\n          angle: {\r\n            end: ry2 - ry1,\r\n          },\r\n        });\r\n        danmakuObj.animations.push({\r\n          type: \"rotateZ\",\r\n          duration,\r\n          angle: {\r\n            end: rz2 - rz1,\r\n          },\r\n        });\r\n        // 缩放\r\n        danmakuObj.animations.push({\r\n          type: \"scale\",\r\n          duration,\r\n          scale: {\r\n            x2: s2,\r\n            y2: s2,\r\n            z2: s2,\r\n          },\r\n        });\r\n        console.log(s2);\r\n      }\r\n\r\n      animationsList.push(danmakuObj);\r\n      lastAnimation = animation;\r\n    });\r\n    let { duration = 1000 } = lastAnimation;\r\n    animationsList.push({\r\n      type: \"static\",\r\n      duration,\r\n    });\r\n    // console.log(animationsList);\r\n    return animationsList;\r\n  }\r\n}\r\n","import { CodeDanmakuParser } from \"./codeDanmaku/CodeDanmakuParser\";\r\nimport { DanmakuParserInterface } from \"./DanmakuParserInterface\";\r\nimport { Mode7DanmakuParser } from \"./mode7Danmaku/Mode7DanmakuParser\";\r\n\r\n/**\r\n * 弹幕解析器简单工厂\r\n */\r\nexport class DanmakuParserFactory {\r\n  protected static parser = {\r\n    code: CodeDanmakuParser,\r\n    mode7: Mode7DanmakuParser,\r\n  };\r\n  public static getInstance(type: string): DanmakuParserInterface {\r\n    let instance = this.parser[type];\r\n    if (!instance) {\r\n      instance = this.parser[\"code\"];\r\n    }\r\n    return new instance();\r\n  }\r\n}\r\n","import { SizeInterface } from \"../core/Style/SizeInterface\";\r\nimport { StageInterface } from \"../core/Stage/StageInterface\";\r\nimport { Context } from \"../Context/Context\";\r\nimport { I18n } from \"../i18n\";\r\nimport { CanvasStyle } from \"../core/Style/CanvasStyle\";\r\nimport { PxSize } from \"../core/Style/Unit/PxSize\";\r\nimport { TimeLineFactory } from \"../Factory/TimeLineFactory\";\r\nimport { DanmakuEvent } from \"../Event/DanmakuEvent\";\r\nimport { DanmakuEventType } from \"../Event/DanmakuEventType\";\r\nimport { RendererFactory } from \"../Factory/RendererFactory\";\r\nimport { DanmakuParserFactory } from \"../Factory/DanmakuParser/DanmakuParserFactory\";\r\n\r\n/**\r\n * 控制器 ，统一管理整个弹幕系统\r\n * 在这里，每种弹幕类型都会得到一个舞台对象，进行渲染\r\n */\r\nexport class Controller {\r\n  /**\r\n   * 画布对象\r\n   */\r\n  protected containers: HTMLElement;\r\n  /**\r\n   * 实时的Css样式表\r\n   */\r\n  protected canvasStyle: CSSStyleDeclaration;\r\n  /**\r\n   * 舞台列表\r\n   */\r\n  protected stageList: StageInterface[] = [];\r\n  /**\r\n   * 暂停状态\r\n   */\r\n  protected pauseStatus: boolean = true;\r\n  /**\r\n   * 时间戳\r\n   */\r\n  protected timeStamp: number = 0;\r\n  /**\r\n   * 播放的时间\r\n   */\r\n  protected time: number = 0;\r\n  /**\r\n   * 跳转状态\r\n   */\r\n  public skipStatus: boolean = false;\r\n\r\n  /**\r\n   * 弹幕获取器函数列表\r\n   */\r\n  protected danmakuFunction: {\r\n    [type: string]: (send: (str: string[]) => void) => void;\r\n  } = {};\r\n\r\n  constructor(containers: HTMLElement) {\r\n    this.containers = containers;\r\n    // 获取实时的style对象，当大小发生变化时，会更新自身\r\n    this.canvasStyle = window.getComputedStyle(containers);\r\n    // 初始化容器\r\n    this.initContainer();\r\n    let that = this;\r\n    (function animloop() {\r\n      if (!that.pauseStatus) {\r\n        that.refresh();\r\n      }\r\n      requestAnimationFrame(animloop);\r\n    })();\r\n  }\r\n  /**\r\n   * 获得容器尺寸\r\n   */\r\n  public getContainersSize(): SizeInterface {\r\n    return {\r\n      width: new PxSize(parseInt(this.canvasStyle.width, 10)),\r\n      height: new PxSize(parseInt(this.canvasStyle.height, 10)),\r\n    };\r\n  }\r\n  /**\r\n   * 将一个舞台添加到容器内\r\n   * @param stage 舞台\r\n   * @param index 排列顺序\r\n   * @returns 成功与失败的状态\r\n   */\r\n  public registStage(stage: StageInterface, index: number): boolean {\r\n    // 检查列表中是否存在\r\n    if (this.stageList[index]) {\r\n      return false;\r\n    }\r\n    this.stageList[index] = stage;\r\n    return true;\r\n  }\r\n  /**\r\n   * 将舞台挂载到容器中\r\n   */\r\n  public mount() {\r\n    // console.info(I18n.t(\"Start mount stage\"));\r\n    // 遍历每一个舞台\r\n    this.stageList.forEach((stage, key) => {\r\n      // 获取一个div\r\n      let div = this.getDIV();\r\n      // 给舞台初始化渲染器\r\n      let render = RendererFactory.getRenderInstance(stage.rendererType());\r\n      // 将div挂载到渲染器\r\n      render.setCanvasContainer(div);\r\n      // 设置舞台渲染器\r\n      stage.stageRenderer(render);\r\n      // 设置舞台时间轴\r\n      let lineType = stage.timeLineType();\r\n      let timeline = TimeLineFactory.getTimeLine(lineType);\r\n      stage.timeLine(timeline);\r\n      // 检察是否存在弹幕获取器\r\n      let attachedType = stage.attachedType();\r\n      if (this.danmakuFunction[attachedType]) {\r\n        // 如果存在，就获取弹幕\r\n        this.resetDanmaku(key);\r\n      } else {\r\n        console.warn(I18n.t(\"danmaku get function is null :\" + attachedType));\r\n      }\r\n\r\n      // 更新渲染器内画布样式\r\n      render.updateCanvasStyle(this.getCanvasStylByStage(stage));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 初始化弹幕容器\r\n   */\r\n  protected initContainer() {\r\n    if (Context.debug) {\r\n      // debug模式\r\n      this.containers.classList.add(\"danmaku-containers-debug\");\r\n    }\r\n    this.containers.classList.add(\"danmaku-containers\");\r\n  }\r\n\r\n  /**\r\n   * 重置尺寸\r\n   */\r\n  public resize() {\r\n    // 重置舞台的尺寸\r\n    this.stageList.forEach((stage) => {\r\n      let render = stage.getRenderer();\r\n      if (render) {\r\n        render.updateCanvasStyle(this.getCanvasStylByStage(stage));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建div容器\r\n   */\r\n  protected getDIV(): HTMLElement {\r\n    let div = document.createElement(\"div\");\r\n    div.classList.add(\"stage\");\r\n    this.containers.appendChild(div);\r\n    return div;\r\n  }\r\n\r\n  /**\r\n   * 根据舞台对象创建一个canvasStyle\r\n   * @param stage 舞台对象\r\n   * @returns\r\n   */\r\n  protected getCanvasStylByStage(stage: StageInterface): CanvasStyle {\r\n    let size = stage.stageSize(this.getContainersSize());\r\n    let color = stage.stageBackgroundColor(this.getContainersSize());\r\n    let pos = stage.stagePosition(this.getContainersSize(), size);\r\n    return { position: pos, color: color, size: size };\r\n  }\r\n\r\n  public refresh() {\r\n    this.time = Date.now() - this.timeStamp;\r\n    // 通知每个舞台刷新\r\n    this.stageList.forEach((stage) => {\r\n      // console.log(1)\r\n      stage.refresh(this.time);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 暂停\r\n   */\r\n  public pause() {\r\n    if (!this.pauseStatus) {\r\n      this.pauseStatus = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 播放\r\n   */\r\n  public start() {\r\n    if (this.pauseStatus) {\r\n      // 同步时间\r\n      this.timeStamp = Date.now() - this.time;\r\n      this.pauseStatus = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 跳转\r\n   */\r\n  public skip(time: number) {\r\n    if (this.pauseStatus) {\r\n      // 如果是暂停状态\r\n      this.time = time;\r\n    } else {\r\n      // 否则使用这个方法\r\n      this.timeStamp = Date.now() - time;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置整个系统\r\n   */\r\n  public reset() {\r\n    // 清空所有舞台\r\n    this.stageList.forEach((stage) => {\r\n      stage.reset();\r\n    });\r\n    // 触发弹幕舞台重置事件\r\n    DanmakuEvent.dispatch(DanmakuEventType.DANMAKU_STAGE_RESET, {});\r\n\r\n    this.pauseStatus = true;\r\n    this.timeStamp = 0;\r\n    this.time = 0;\r\n    this.skipStatus = false;\r\n  }\r\n\r\n  /**\r\n   * 获取弹幕当前时间\r\n   * @returns number\r\n   */\r\n  public getTime(): number {\r\n    return this.time;\r\n  }\r\n\r\n  /**\r\n   * 添加弹幕获取器\r\n   * @param type 舞台的附属类型\r\n   * @param fun 回调函数\r\n   */\r\n  public addGetDanmakuFunction(\r\n    type: string,\r\n    fun: (send: (str: string[]) => void) => void\r\n  ) {\r\n    this.danmakuFunction[type] = fun;\r\n  }\r\n\r\n  /**\r\n   * 重置弹幕接口\r\n   */\r\n  public resetDanmaku(type: number) {\r\n    // 判断舞台列表是否存在\r\n    if (!this.stageList[type]) {\r\n      return;\r\n    }\r\n\r\n    // 弹幕开始加载事件\r\n    DanmakuEvent.dispatch(DanmakuEventType.DANMAKU_LOAD_START, {});\r\n    // 获取当前舞台\r\n    let stage = this.stageList[type];\r\n    // 获取弹幕时间轴\r\n    let timeline = stage.getTimeLine();\r\n    // 重置时间轴\r\n    timeline.reset();\r\n    // 根据时间轴类型找到对应的弹幕获取器\r\n    let danmakuGetter = this.danmakuFunction[stage.attachedType()];\r\n    // 判断弹幕获取器是否存在\r\n    if (!danmakuGetter) {\r\n      return;\r\n    }\r\n    danmakuGetter((res: string[]) => {\r\n      // 解析弹幕文本\r\n      res.forEach((danmakuStr: string) => {\r\n        let parser = DanmakuParserFactory.getInstance(stage.attachedType());\r\n        // let parser = new CodeDanmakuParser();\r\n        // 遍历添加进时间轴\r\n        parser.parser(danmakuStr).forEach((danmaku) => {\r\n          console.log(danmaku.getAnimation());\r\n          timeline.addDanmaku(danmaku);\r\n        });\r\n        // 弹幕加载完成事件\r\n        DanmakuEvent.dispatch(DanmakuEventType.DANMAKU_LOAD_DONE, {});\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { UnitInterface } from \"./UnitInterface\"\r\n\r\n/**\r\n * 颜色接口\r\n */\r\n\r\nexport class Color implements UnitInterface {\r\n    public r: number\r\n    public g: number\r\n    public b: number\r\n    public a: number\r\n    constructor(r:number, g:number, b:number, a:number) {\r\n        this.r = r\r\n        this.g = g\r\n        this.b = b\r\n        this.a = a\r\n    }\r\n    public string(): string {\r\n        return \"rgba(\" + this.r + \",\" + this.g + \",\" + this.b + \",\" + this.a + \")\"\r\n    }\r\n    /**\r\n     * 常见颜色表\r\n     */\r\n    protected static color:{[key:string]:[number,number,number,number]} = {\r\n        \"black\":[0,0,0,1],\r\n        \"white\":[255,255,255,1],\r\n        \"red\":[255,0,0,1],\r\n        \"green\":[0,255,0,1],\r\n        \"blue\":[0,0,255,1],\r\n        \"pink\":[255,105,108,1],\r\n        \"yellow\":[255,255,0,1],\r\n        \"grey\":[130,130,130,1]\r\n    }\r\n    /**\r\n     * 获取预设颜色\r\n     * @param color 颜色名称\r\n     * @returns \r\n     */\r\n    public static getColor(color:string):Color{\r\n        if(this.color[color]){\r\n            return new this(...this.color[color])\r\n        }else{\r\n            return new this(...this.color[\"black\"])\r\n        }\r\n\r\n    }\r\n}","import { RendererInterface } from \"../Renderer/RendererInterface\";\r\nimport { Color } from \"../Style/Unit/Color\";\r\nimport { PositionInterface } from \"../Style/PositionInterface\";\r\nimport { SizeInterface } from \"../Style/SizeInterface\";\r\nimport { StageInterface } from \"./StageInterface\";\r\nimport { PxSize } from \"../Style/Unit/PxSize\";\r\nimport { TimeLineInterface } from \"../../TimeLine/TimeLineInterface\";\r\nimport { I18n } from \"../../i18n\";\r\nimport { TimeLineDanmaku } from \"../../TimeLine/TimeLineDanmaku\";\r\n\r\nexport abstract class BaseStage implements StageInterface {\r\n  protected renderer?: RendererInterface;\r\n  protected timeLineObj?: TimeLineInterface;\r\n  public stageSize(containersSize: SizeInterface): SizeInterface {\r\n    return {\r\n      width: containersSize.width,\r\n      height: containersSize.height,\r\n    };\r\n  }\r\n  public stagePosition(): PositionInterface {\r\n    return {\r\n      x: new PxSize(0),\r\n      y: new PxSize(0),\r\n    };\r\n  }\r\n  public stageBackgroundColor(): Color {\r\n    return new Color(0, 0, 0, 0);\r\n  }\r\n  public stageRenderer(render: RendererInterface): boolean {\r\n    this.renderer = render;\r\n    return true;\r\n  }\r\n  public getRenderer(): RendererInterface {\r\n    if (this.renderer) {\r\n      return this.renderer;\r\n    } else {\r\n      throw ReferenceError(I18n.t(\"renderer is null\"));\r\n    }\r\n  }\r\n  public timeLine(timeLine: TimeLineInterface): boolean {\r\n    this.timeLineObj = timeLine;\r\n    return true;\r\n  }\r\n  public refresh(time: number): boolean {\r\n    if (!this.renderer) {\r\n      return false;\r\n    }\r\n    // console.log(time);\r\n\r\n    let list: { skip: boolean; DanmakuList: TimeLineDanmaku[] };\r\n    list = this.timeLineObj?.getDanmakuList(time) || {\r\n      skip: false,\r\n      DanmakuList: [],\r\n    };\r\n    if (list) {\r\n      if (list.skip) {\r\n        this.renderer?.reset();\r\n      }\r\n\r\n      list.DanmakuList.forEach((val) => {\r\n        this.renderer?.addDanmaku(val.danmaku);\r\n      });\r\n    }\r\n    this.renderer.refresh(time);\r\n    return true;\r\n  }\r\n  public abstract rendererType(): string;\r\n  public abstract attachedType(): string;\r\n  public abstract timeLineType(): string;\r\n  public reset(): boolean {\r\n    this?.renderer?.reset();\r\n    return true;\r\n  }\r\n  public getTimeLine(): TimeLineInterface {\r\n    if (!this.timeLineObj) {\r\n      throw ReferenceError(I18n.t(\"Time line is null\"));\r\n    }\r\n    return this.timeLineObj;\r\n  }\r\n}\r\n","import { BaseStage } from \"./BaseStage\";\r\n\r\n/**\r\n * 代码弹幕舞台\r\n */\r\nexport class CodeDanmakuStage extends BaseStage {\r\n  public timeLineType(): string {\r\n    return \"advanced\";\r\n  }\r\n  public rendererType(): string {\r\n    return \"css3\";\r\n  }\r\n  public attachedType(): string {\r\n    return \"code\";\r\n  }\r\n}\r\n","import { BaseStage } from \"./BaseStage\";\r\n\r\n/**\r\n * mode7 弹幕舞台\r\n */\r\nexport class Mode7Stage extends BaseStage {\r\n  public rendererType(): string {\r\n    return \"css3\";\r\n  }\r\n  public attachedType(): string {\r\n    return \"mode7\";\r\n  }\r\n  public timeLineType(): string {\r\n    return \"advanced\";\r\n  }\r\n}\r\n","import \"../css/base.css\";\r\nimport { Controller } from \"./Controller/Controller\";\r\nimport { I18n } from \"./i18n\";\r\nimport { InitConfigInterface } from \"./InitConfigInterface\";\r\nimport { DanmakuEvent } from \"./Event/DanmakuEvent\";\r\nimport { DanmakuEventType } from \"./Event/DanmakuEventType\";\r\nimport { CodeDanmakuStage } from \"./core/Stage/CodeDanmakuStage\";\r\nimport { Mode7Stage } from \"./core/Stage/Mode7Stage\";\r\nexport class MFADE {\r\n  public controller: Controller;\r\n  constructor(config: InitConfigInterface) {\r\n    // 类型检查\r\n    if (!config.containers) {\r\n      throw ReferenceError(I18n.t(\"Containers is null\"));\r\n    }\r\n    this.controller = new Controller(config.containers);\r\n    // json代码弹幕\r\n    if (config.codeDanmaku) {\r\n      this.controller.addGetDanmakuFunction(\"code\", config.codeDanmaku);\r\n      this.controller.registStage(new CodeDanmakuStage(), 1);\r\n    }\r\n\r\n    // mode7 弹幕\r\n    if (config.mode7Danmaku) {\r\n      this.controller.addGetDanmakuFunction(\"mode7\", config.mode7Danmaku);\r\n      this.controller.registStage(new Mode7Stage(), 2);\r\n    }\r\n    // 挂载\r\n    this.controller.mount();\r\n    // 监听大小变化\r\n    window.addEventListener(\"resize\", () => {\r\n      this.controller.resize();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 暂停\r\n   */\r\n  public pause() {\r\n    this.controller.pause();\r\n  }\r\n  /**\r\n   * 开始\r\n   */\r\n  public start() {\r\n    this.controller.start();\r\n  }\r\n  /**\r\n   * 跳转\r\n   */\r\n  public skip(time: number) {\r\n    this.controller.skip(time);\r\n  }\r\n  /**\r\n   * 当前时间\r\n   * @returns number\r\n   */\r\n  public time() {\r\n    return this.controller.getTime();\r\n  }\r\n  /**\r\n   * 重置弹幕尺寸\r\n   */\r\n  public resize() {\r\n    this.controller.resize();\r\n  }\r\n  /**\r\n   * 重置弹幕\r\n   */\r\n  public reset() {\r\n    this.controller.resetDanmaku(1);\r\n    this.controller.reset();\r\n  }\r\n  /**\r\n   * 添加事件监听\r\n   * @param event\r\n   * @param callback\r\n   */\r\n  public listenerEvent(event: DanmakuEventType, callback: (data: any) => void) {\r\n    DanmakuEvent.listener(event, callback);\r\n  }\r\n}\r\n\r\n// 添加进全局\r\nif (typeof globalThis !== \"undefined\") {\r\n  globalThis.MFADE = MFADE;\r\n} else {\r\n  window[\"MFADE\"] = MFADE;\r\n}\r\n"],"names":["module","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","_arrayLikeToArray","arr","len","arr2","Array","_item","isArray","_arrayWithHoles","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","err","_iterableToArrayLimit","o","minLen","n","Object","prototype","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","___CSS_LOADER_EXPORT___","memo","getTarget","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","index","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","key","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","firstChild","singleton","singletonCounter","update","styleIndex","bind","parentNode","removeStyleElement","newObj","all","atob","lastIdentifiers","newList","newLastIdentifiers","_index","splice","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","d","a","definition","defineProperty","enumerable","get","prop","hasOwnProperty","language","debug","DanmakuEventType","t","str","tranTxt","Context","string","lastTime","danmakuList","addDanmaku","danmaku","start","end","startTime","getAnimation","getDuration","timeToIndex","time","Math","floor","getDanmakuList","skip","DanmakuList","timeIndex","l","reset","getTimeLine","type","AdvancedLine","buildPrefix","eventname","prefix","listener","callback","addEventListener","detail","dispatch","event","CustomEvent","dispatchEvent","_danmaku","refresh","setCanvasContainer","canvas","updateCanvasStyle","width","size","height","left","position","x","top","y","backgroundColor","color","lengthSrting","num","Matrix3dString","SyntaxError","I18n","recursionDanmaku","danmakuobj","div","createDiv","getContent","setStyle","getStyle","childObj","element","animation","child","getChild","innerText","recursionDiv","array","ele","assign","recursionStyle","abstime","parentTime","dan","sty","max","getMatrix","transform","UnitTools","parentElement","canvasSize","PxSize","r","DanmakuTool","innerHTML","getRenderInstance","rendererList","ReferenceError","BaseRenderer","css3","CSS3Renderer","deepMerge","obj1","obj2","b","c","px3","px2","px1","py3","py2","py1","epsilon","getX","getY","solve","g","abs","cubic","duration","isEnd","p","getProgress","getMatrixForCubic","getCubicStyle","setParams","param","progress","getCubic","getProgressValue","cubicFunc","Cubic","add","sub","mult","a1","tran","b1","m","fill","j","k","getNullMatrix","animations","cumulativeMatrix","AnimationFactory","getAnimationsList","val","dur","Matrix","_progress","boxStyle","fontStyle","noneStyle","style2","matrix","CubicAnimations","cumulativeTime","curAnimation","getCurAnimation","mat","opacity","_time","z","repeat","getCurTime","getAnimations","StaticAnimation","animationTime","origin","getMatrixForOrigin","scale","x1","y1","z1","x2","y2","z2","OriginAnimations","path","angle","A2R","PI","sin","cos","RotationAnimation","params","animationList","ani","TranslateAnimation","RotationXAnimation","RotationYAnimation","RotationZAnimation","ScaleAnimations","ListAnimations","GroupAnimations","RepeatAnimations","OpacityAnimations","console","warn","getType","getDanmakuInstance","BaseDanmaku","process","json","idList","extends","parent","copy","save","parse","DanmakuEvent","DANMAKU_FORMAT_ERROR","DanmakuValidate","DanamkuExtends","DanmakuPosition","DanmakuDefaultAttr","tmpDanmaku","delay","parseInt","then","DanmakuThen","DanmakuDelay","dan2","tagList","parser","getDanmaku","DANMAKU_JSON_INVALID","preprocessPipe","PreprocessPipe","postprocessPipe","PostprocessPipe","DanmakuFactory","childs","danmakulist","danmakuObj","linear","fontSize","fontWeight","weight","textShadow","shadow","stroke","strokeColor","fontFamily","font","zIndex","lastAnimation","animationsList","o2","rx2","ry2","rz2","s2","o1","rx1","ry1","rz1","log","getInstance","instance","code","CodeDanmakuParser","mode7","Mode7DanmakuParser","containers","stageList","pauseStatus","timeStamp","skipStatus","danmakuFunction","canvasStyle","getComputedStyle","initContainer","that","animloop","requestAnimationFrame","getContainersSize","registStage","stage","mount","getDIV","render","RendererFactory","rendererType","stageRenderer","lineType","timeLineType","timeline","TimeLineFactory","timeLine","attachedType","resetDanmaku","getCanvasStylByStage","classList","resize","getRenderer","stageSize","stageBackgroundColor","stagePosition","Date","now","pause","DANMAKU_STAGE_RESET","getTime","addGetDanmakuFunction","fun","DANMAKU_LOAD_START","danmakuGetter","res","danmakuStr","DanmakuParserFactory","DANMAKU_LOAD_DONE","getColor","containersSize","Color","renderer","timeLineObj","BaseStage","config","controller","Controller","codeDanmaku","CodeDanmakuStage","mode7Danmaku","Mode7Stage","listenerEvent","globalThis","MFADE"],"sourceRoot":""}